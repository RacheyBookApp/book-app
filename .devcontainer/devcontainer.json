{
	"name": "Rust and PostgreSQL",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",

	// Features to add to the dev container. More info: https://containers.dev/implementors/features.
	// "features": {},

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": { 
				"lldb.executable": "/usr/bin/lldb",
				// VS Code don't watch files under ./target
				"files.watcherExclude": {
					"**/target/**": true
				},
				"rust-analyzer.checkOnSave.command": "clippy",
				"rust-analyzer.linkedProjects": [
					"./server/Cargo.toml"
				],
				"sqltools.connections": [{
					"name": "Container database",
					"driver": "PostgreSQL",
					"previewLimit": 50,
					"server": "localhost",
					"port": 5432,
					"database": "postgres",
					"username": "postgres",
					"password": "postgres"
				}]
			},
			
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"vadimcn.vscode-lldb",
				"mutantdino.resourcemonitor",
				"rust-lang.rust-analyzer",
				"tamasfe.even-better-toml",
				"serayuzgur.crates",
				"mtxr.sqltools",
				"mtxr.sqltools-driver-pg"
			]
		}
	},
	"features": {
		"ghcr.io/devcontainers/features/node:1": {}
	},

	"onCreateCommand": "sh /workspaces/book-app/.devcontainer/bootstrap.sh"

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [5432],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "rustc --version",

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
